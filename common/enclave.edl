// openenclave_ml_poc/common/enclave.edl
enclave {
    from "openenclave/edl/sgx/platform.edl" import *;
    from "openenclave/edl/logging.edl" import *; 

    trusted {
        public oe_result_t initialize_enclave_ml_context(
            [in, size=model_size] const unsigned char* model_data, 
            size_t model_size,
            [out] uint64_t* enclave_session_handle); 

        public oe_result_t enclave_infer(
            uint64_t enclave_session_handle,
            [in, size=input_data_byte_size] const int64_t* input_data,
            size_t input_data_byte_size,
            [out, size=output_buffer_byte_size] float* output_buffer,
            size_t output_buffer_byte_size,
            [out] size_t* actual_output_size_bytes_out);

        public oe_result_t terminate_enclave_ml_context(uint64_t enclave_session_handle);
    };

    untrusted {
        oe_result_t ocall_ggml_load_model(
            [out] oe_result_t* ocall_host_ret,
            [out] oe_result_t* host_return_value,
            [out] uint64_t* host_session_handle,
            [in, size=model_data_len] const unsigned char* model_data,
            size_t model_data_len);

        oe_result_t ocall_ggml_run_inference(
            [out] oe_result_t* ocall_host_ret,
            [out] oe_result_t* host_return_value,
            uint64_t host_session_handle,
            [in, size=input_len] const void* input_data,
            size_t input_len,
            [out, size=output_buf_len] void* output_data,
            size_t output_buf_len,
            [out] size_t* actual_output_len);

        oe_result_t ocall_ggml_release_session(
            [out] oe_result_t* ocall_host_ret,
            [out] oe_result_t* host_return_value,
            uint64_t host_session_handle);
    };
};