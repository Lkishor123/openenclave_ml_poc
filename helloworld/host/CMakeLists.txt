cmake_minimum_required(VERSION 3.16)

set(HOST_APP_NAME helloworld_host)
set(HOST_SOURCES
    host.c
    ${EDL_UNTRUSTED_C} # Generated by root CMake
)
# helloworld_u.h will be included by host.c

add_executable(${HOST_APP_NAME} ${HOST_SOURCES})

# Link against Open Enclave host libraries
target_link_libraries(${HOST_APP_NAME} PRIVATE openenclave::host)

# Ensure EDL generation is a dependency
add_dependencies(${HOST_APP_NAME} GenerateEDL)

message(STATUS "Configuring Host Application: ${HOST_APP_NAME}")
message(STATUS "  Host sources: ${HOST_SOURCES}")

# Create a 'make run' target for convenience
# It assumes the host executable is in CMAKE_CURRENT_BINARY_DIR (build/host/)
# and the signed enclave is in ${CMAKE_BINARY_DIR}/enclave/${ENCLAVE_NAME}.signed.so
# where ENCLAVE_NAME is 'helloworld_enclave' from enclave/CMakeLists.txt
set(SIGNED_ENCLAVE_PATH "${CMAKE_BINARY_DIR}/enclave/helloworld_enclave.signed.so")
add_custom_target(run
    COMMAND ./${HOST_APP_NAME} ${SIGNED_ENCLAVE_PATH}
    DEPENDS ${HOST_APP_NAME} helloworld_enclave # Depends on host exe and signed enclave target from oe_add_enclave
    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
    COMMENT "Running helloworld sample..."
)
add_custom_target(run_simulate
    COMMAND ./${HOST_APP_NAME} ${SIGNED_ENCLAVE_PATH} --simulate
    DEPENDS ${HOST_APP_NAME} helloworld_enclave
    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
    COMMENT "Running helloworld sample in SIMULATION mode..."
)